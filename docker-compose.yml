version: '3'
services:

  app:
    build: ./
    ports:
      - 8080:8080
  
  database:
    image: postgres:15.4-alpine3.18
    environment:
      POSTGRES_PASSWORD: none
      POSTGRES_DB: db
  
  adminer:
    image: adminer:latest
    ports:
      - 8000:8080
  
  # Login: Admin
  # Password: zabbix
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-6.2-latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: none
      DB_SERVER_HOST: database
      DB_SERVER_PORT: 5432
      ZBX_ENABLE_SNMP_TRAPS: true
  
  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-6.2-latest
    ports:
      - 8001:8080
    environment:
      ZBX_SERVER_HOST: zabbix-server
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: none
      DB_SERVER_HOST: database
      DB_SERVER_PORT: 5432
  
  zabbix-agent:
    image: zabbix/zabbix-agent2:alpine-6.2-latest
    environment:
      ZBX_HOSTNAME: localhost
      ZBX_SERVER_HOST: zabbix-server
    privileged: true
  
  grafana:
    image: grafana/grafana
    ports:
      - 8002:3000
  
  prometheus:
    image: prom/prometheus
    ports:
      - 8003:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
  
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:none@database:5432/?sslmode=disable"

  mongodb:
    image: mongo:latest
  
  opensearch:
    image: "opensearchproject/opensearch:2.4.0"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    restart: "on-failure"
  
  # Login: admin
  # Password: StrongPassw0rd
  graylog:
    image: graylog/graylog:5.1
    depends_on:
      opensearch:
        condition: "service_started"
      mongodb:
        condition: "service_started"
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 -- /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: "qwertyuiop1234567890"
      GRAYLOG_ROOT_PASSWORD_SHA2: "e1b24204830484d635d744e849441b793a6f7e1032ea1eef40747d95d30da592"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
      # To make reporting (headless_shell) work inside a Docker container
      GRAYLOG_REPORT_DISABLE_SANDBOX: "true"
    ports:
      - 9000:9000
